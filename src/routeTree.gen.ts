/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersIndexRouteImport } from './routes/users/index'
import { Route as TicketsIndexRouteImport } from './routes/tickets/index'
import { Route as HowItWorksIndexRouteImport } from './routes/how-it-works/index'
import { Route as EventsIndexRouteImport } from './routes/events/index'
import { Route as DemoStoreRouteImport } from './routes/demo.store'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIndexRoute = UsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const TicketsIndexRoute = TicketsIndexRouteImport.update({
  id: '/tickets/',
  path: '/tickets/',
  getParentRoute: () => rootRouteImport,
} as any)
const HowItWorksIndexRoute = HowItWorksIndexRouteImport.update({
  id: '/how-it-works/',
  path: '/how-it-works/',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsIndexRoute = EventsIndexRouteImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStoreRoute = DemoStoreRouteImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo/store': typeof DemoStoreRoute
  '/events': typeof EventsIndexRoute
  '/how-it-works': typeof HowItWorksIndexRoute
  '/tickets': typeof TicketsIndexRoute
  '/users': typeof UsersIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/store': typeof DemoStoreRoute
  '/events': typeof EventsIndexRoute
  '/how-it-works': typeof HowItWorksIndexRoute
  '/tickets': typeof TicketsIndexRoute
  '/users': typeof UsersIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo/store': typeof DemoStoreRoute
  '/events/': typeof EventsIndexRoute
  '/how-it-works/': typeof HowItWorksIndexRoute
  '/tickets/': typeof TicketsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo/store'
    | '/events'
    | '/how-it-works'
    | '/tickets'
    | '/users'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/store'
    | '/events'
    | '/how-it-works'
    | '/tickets'
    | '/users'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/'
    | '/demo/store'
    | '/events/'
    | '/how-it-works/'
    | '/tickets/'
    | '/users/'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoStoreRoute: typeof DemoStoreRoute
  EventsIndexRoute: typeof EventsIndexRoute
  HowItWorksIndexRoute: typeof HowItWorksIndexRoute
  TicketsIndexRoute: typeof TicketsIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tickets/': {
      id: '/tickets/'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof TicketsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/how-it-works/': {
      id: '/how-it-works/'
      path: '/how-it-works'
      fullPath: '/how-it-works'
      preLoaderRoute: typeof HowItWorksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events/': {
      id: '/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoStoreRoute: DemoStoreRoute,
  EventsIndexRoute: EventsIndexRoute,
  HowItWorksIndexRoute: HowItWorksIndexRoute,
  TicketsIndexRoute: TicketsIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
